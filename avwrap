#!/bin/sh --

#batch rewrap an entire AVCHD folder structure into m4v, keeping video and transcoding audio
#arguments: convert <path to memory card root>
#example: convert /Volumes/NO\ NAME

#set file list separator so we can work with spaces in file/dir names
SAVEIFS=$IFS
IFS=":"

# The directory name that holds your movies.
FILES="$1/PRIVATE/AVCHD/BDMV/STREAM/*.MTS"
#FILES="$1/BDMV/STREAM/*.MTS"
HOMEDIR=~/

AUDIOF="aac"
AUDIOQ="192k"

#lossless formats, requires .mov
#AUDIOF="pcm_alaw"
#AUDIOF="pcm_s16le"

#container file format
CONTAIN="m4v"

#directory name containing whole imported batch. Also name of temporary dir.
#Won't be visible in the end for some output options.
BATCHDIR=$(stat -f "%Sm" -t "AVCHD-%Y%m%d" ${FILES[1]})

#determine full (eventual) output dir path
OUTDIR="${HOMEDIR}/Pictures/iPhoto library/Auto Import/${BATCHDIR}"

#create temporary dir
TMPDIR="/tmp/${BATCHDIR}"
mkdir -p $TMPDIR

# Start looping over files
for MTS in ${FILES}; do
  #determine stem file name
  NAME=${MTS%.MTS}
  NAME=${NAME##*/}
  
  #determine output file name using creation date.
  #name is on the long side to allow multiple imports from different cards
  #to land in the same folder without overwriting each other
  OUTNAME=$(stat -f "%Sm" -t "AVCHD-%Y%m%d-%H%M${NAME}" ${MTS})
  OUTPUT="${TMPDIR}/${OUTNAME}.${CONTAIN}"

  #get input creation date to apply to output
  MDATE=$(stat -f "%Sm" -t "%Y%m%d%H%M.%S" ${MTS})
  
  #run conversion
  ffmpeg -i "${MTS}" -acodec ${AUDIOF} -ab ${AUDIOQ} -vcodec copy "${OUTPUT}"

  #check for success
  if [ $? -eq 0 ]; then
    echo
  else
    # If ffmpeg failed, then say so and exit loop.
    echo "FAILED converting stream ${NAME}, exiting."; IFS=$SAVEIFS; exit 1; 
  fi
  
  #adjust file date attributes
  touch -c -mt ${MDATE} "${OUTPUT}"

done # End of file loop

#move end product to chosen destination dir
mv -vn "${TMPDIR}" "${OUTDIR}"

#TODO: delete AVCHD dir

IFS=$SAVEIFS

# Exit.
exit 0